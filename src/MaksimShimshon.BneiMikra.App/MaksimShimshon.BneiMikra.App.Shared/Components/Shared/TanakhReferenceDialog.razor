@inherits FluxorComponent

<MudDialog>
    <DialogContent>

        @if (State.Value.IsLoading)
        {
            <Loader>
                <MudProgressCircular Color="Color.Primary" Indeterminate="true" />
                <MudText Align=@Align.Center Typo=@Typo.subtitle1>
                    @AppResourceProvider.GetString(() => ApplicationResource.GenericLoadingTitle)
                </MudText>
            </Loader>
        }
        else if (State.Value.Verse != default)
        {
            <MudText Typo=@Typo.body1 Align=@Align.Right> @((MarkupString)State.Value.Verse.Hebrew)</MudText>
            <Divider VerticalSpacing="0.3em" Invisible=true />
            <MudText Typo=@Typo.body2 Align=@Align.Left> @((MarkupString)TransliterationProvider.Transliterate(State.Value.Verse.Hebrew))</MudText>

            @if (!string.IsNullOrWhiteSpace(State.Value.Verse.Translated))
            {
                <Divider VerticalSpacing="0.3em" Invisible=true />
                <MudText Typo=@Typo.body2 Align=@Align.Left> @((MarkupString)State.Value.Verse.Translated)</MudText>

            }
            @if (!string.IsNullOrWhiteSpace(Note))
            {
                <Divider VerticalSpacing="1em" />
                <MudText Typo=@Typo.overline>
                    @AppResourceProvider.GetString(() => ApplicationResource.TanakhReferenceNoteTitle)
                </MudText>
                <MudText Typo=@Typo.subtitle1>
                    @((MarkupString)Note)
                </MudText>

            }
        }
        else
        {
            <MudText Align=@Align.Center>
                @AppResourceProvider.GetString(() => ApplicationResource.TanakhReferenceUnavailable)
            </MudText>
        }
    </DialogContent>
</MudDialog>